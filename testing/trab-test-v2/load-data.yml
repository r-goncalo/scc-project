config:
  target: 'https://scc24appwesteurope188046.azurewebsites.net/rest'
  plugins:
    metrics-by-endpoint:
      useOnlyRequestNames: true
  processor: "./test-utils.js"
  variables:
     metricsProcessEndpoint : "myProcessEndpoint"  # function used to aggregate endpoints for statistics
  phases:
  - name: "Create users"    # Create users
    duration: 1
    arrivalCount: 1

scenarios:
  - name: 'Create users'
    weight: 1
    flow:
      # - loop:                            # let's create 950 users - loop ... count
      #   - post:                          # First: post image for the user
      #       url: "/media"
      #       headers:
      #         Content-Type: application/octet-stream
      #         Accept: application/json
      #       beforeRequest: "uploadImageBody"
      #       capture: 
      #         regexp: "(.+)"
      #         as: "imageId"              # capture the reply as image id to be used in user creation
      #   - function: "genNewUser"         # Generate the needed information for the user
      #   - post:
      #       url: "/user"
      #       headers:
      #         Content-Type: application/json
      #         Accept: application/json
      #       json:
      #         id: "{{ userid }}"
      #         name: "{{ name }}"
      #         pwd: "{{ pwd }}"
      #         photoId: "{{ imageId }}"
      #       afterResponse: "genNewUserReply"    # capture result and store in file
      #   count: 250
      - loop:                            # let's create 50 users - loop ... count
        # - post:                          # First: post image for the user
        #     url: "/media"
        #     headers:
        #       Content-Type: application/octet-stream
        #       Accept: application/json
        #     beforeRequest: "uploadImageBody"
        #     capture: 
        #       regexp: "(.+)"
        #       as: "imageId"              # capture the reply as image id to be used in user creation
        - function: "genNewUser"         # Generate the needed information for the user
        - post:
            url: "/user"
            headers:
              Content-Type: application/json
              Accept: application/json
            json:
              id: "{{ userid }}"
              name: "{{ name }}"
              pwd: "{{ pwd }}"
              photoId: null
            afterResponse: "genNewUserReply"    # capture result and store in file
        - post:
            url: "/user/auth"
            headers:
              Content-Type: application/json
            json:
              user: "{{ userid }}"
              pwd: "{{ pwd }}"
            afterResponse: "captureAuthCookie"

        - loop:                            # let's create 50 users - loop ... count
          # - post:                          # First: post image for the house
          #     url: "/media"
          #     headers:
          #       Content-Type: application/octet-stream
          #       Accept: application/json
          #     beforeRequest: "uploadImageBody"
          #     capture: 
          #       regexp: "(.+)"
          #       as: "imageId"              # capture the reply as image id to be used in house creation
          - function: "genNewHouse"         # Generate the needed information for the house
          - post:
              url: "/house"
              headers:
                Content-Type: application/json
                Accept: application/json
                Cookie: "{{ authToken }}"
              json:
                id: null
                name: "{{ name }}"
                location: "{{ location }}"
                description: "{{ description }}"
                ownerId: "{{ userid }}"
                photoIds: [] #["{{ imageId }}"]
              afterResponse: "responseStatus"
              capture: 
                json: "$.id"
                as: "houseid"              # capture the house id to be used in house creation

          - post:                          # make this house available
              url: "/house/{{ houseid }}/available"
              headers:
                Content-Type: application/json
                Accept: application/json
                Cookie: "{{ authToken }}"
              json:
                id: "null"
                houseId: "{{ houseid }}"
                fromDate: "12-2023"
                toDate: "12-2024"
                cost: "{{ cost }}"
                discount: "{{ discount }}"
              afterResponse: "responseStatus"
          whileTrue: "random90"
        count: 50
