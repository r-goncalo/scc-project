Create docker image of project:

    docker build -t rgoncalo/scc2324-app ./

Running the image localy:

    docker run --rm -p 8080:8080 rgoncalo/scc2324-app

The link should be:



Push the image: (The push refers to repository [docker.io/rgoncalo/scc2324-app])

    docker push rgoncalo/scc2324-app

Create a resource group:

    az group create --name scc2324-cluster-60519 --location westeurope

Start a container:

    az container create --resource-group scc2324-cluster-60519 --name scc-app --image rgoncalo/scc2324-app --ports 8080 --dns-name-label scc-reservation-60519

 "ipAddress": {
    "autoGeneratedDomainNameLabelScope": "Unsecure",
    "dnsNameLabel": "scc-reservation-60519",
    "fqdn": "scc-reservation-60519.westeurope.azurecontainer.io",
    "ip": "20.76.76.200",
    "ports": [
      {
        "port": 8080,
        "protocol": "TCP"
      }

Note the url where the app is running:

http://scc-reservation-60519.westeurope.azurecontainer.io:8080/scc2324-project1-1.0

Delete a container given the resource group and name:

    az container delete --resource-group scc2324-cluster-60519 --name scc-app

(Kubernetes)

Create a service principal:

    az ad sp create-for-rbac --name http://scc2324-kuber-60519 --role Contributor --scope /subscriptions/4334c4f7-2b91-4e34-a27c-b933f1842437

{
  "appId": "2524fea8-be89-4aa6-881d-1200b3fb870b",
  "displayName": "http://scc2324-kuber-60519",
  "password": "tEP8Q~UitvGLg.lc_f5BdFbM4F77VoOU2_n7XcDH",
  "tenant": "ae7e50a2-ed26-41f7-bd75-f49683f2433a"
}

Services:

    az ad sp list --query "[].{Name:displayName, Id:appId}"

    az ad sp show --id

Create a cluster:

    az aks create --resource-group scc2324-cluster-60519 --name my-scc2324-cluster-60519 --node-vm-size Standard_B2s --generate-ssh-keys --node-count 2 --service-principal "2524fea8-be89-4aa6-881d-1200b3fb870b" --client-secret "tEP8Q~UitvGLg.lc_f5BdFbM4F77VoOU2_n7XcDH"

Check if subscription is registered:

    az provider show --namespace Microsoft.ContainerService --query "registrationState"
    az provider show --namespace Microsoft.Network --query "registrationState"


Clusters:

    az aks list --query "[].{Name:displayName, Id:appId}"

    az aks show --name myscc2324-cluster-60519 --resource-group scc2324-cluster-60519

Get credentials to access cluster:

    az aks get-credentials --resource-group scc2324-cluster-60519 --name my-scc2324-cluster-60519

Deploy an application:

    kubectl apply -f azure-vote.yaml

Check the application services:

    kubectl get services

Get the application pods:

    kubectl get pods

Stream the logs from one pod:

    kubectl logs -f azure-vote-front-84c8bf64fc-29254

Delete all objects on kubernetes:

    kubectl delete deployments,services,pods --all

Delete persistent volumes on kubernetes:

    kubectl delete pv --all

Delete cluster:

    az group delete --resource-group scc2324-cluster-60519